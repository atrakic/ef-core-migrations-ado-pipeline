steps:
- checkout: self
- task: DotNetCoreCLI@2
  displayName: New Manifest for tool
  inputs:
    command: custom
    custom: 'new '
    arguments: tool-manifest
- task: DotNetCoreCLI@2
  displayName: Install EF Tool
  inputs:
    command: custom
    custom: 'tool '
    arguments: install dotnet-ef
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: $(BuildParameters.RestoreBuildProjects)
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: $(BuildParameters.RestoreBuildProjects)
    arguments: --configuration $(BuildConfiguration)
- task: DotNetCoreCLI@2
  displayName: Create SQL Scripts
  inputs:
    command: custom
    custom: 'ef '
    arguments: migrations script --output $(Build.SourcesDirectory)/SQL/dbscript.sql --idempotent --project $(Build.SourcesDirectory)/src/demo.csproj --context ApplicationDbContext
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    projects: $(BuildParameters.RestoreBuildProjects)
    arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
    zipAfterPublish: True
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: SQLScripts'
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)/SQL/dbscript.sql
    ArtifactName: SQLScripts

